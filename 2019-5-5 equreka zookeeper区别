---
title: 2019-5-5 equreka zookeeper区别
tags: 注册中心, equreka  ,zookeeper, zk
grammar_cjkRuby: true
---
### CAP
C（Consistency）：数据一致性。分布式系统中，数据会有副本，无论是否从副本中取数据，从哪个副本取数据，结果都是一样的。保证所有地方数据一样就是保证了数据一致性。由于网络或者机器故障等因素，可能有些副本数据写入正确，有些却写入错误或者失败，这样就导致了数据的不一致了。而满足数据一致性规则，就是保证所有数据都要同步。

A（Availability）：可用性。即 只要收到用户的请求，服务器就必须给出回应。我们需要获取数据时，都能够正常的获取到想要的数据（允许可接受范围内的网络延迟），也就是说，要保证任何时候请求数据都能够正常响应。

P（Partition Tolerance）：分区容错性。当网络通信发生故障时，集群仍然可用，不会因为某个节点挂了或者存在问题，而影响整个系统的正常运作。大多数分布式系统都分布在多个子网络。每个子网络就叫做一个区（partition），区间通信可能失败。比如，一台服务器放在中国，另一台服务器放在美国，这就是两个区，它们之间可能无法通信，系统设计的时候，必须考虑到这种情况。

一般来说，分区容错无法避免，因此可以认为 CAP 的 P 总是成立。CAP 定理告诉我们，剩下的 C 和 A 无法同时做到，所以需要取舍是做到 A 还是 C 。

CAP只能同时满足两个
**核心: 一个分布式系统不可能同时很好的满足一致性，可用性，和分区容错性三个需求**
https://img-blog.csdn.net/20180911102817437?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2phdmFfeHRo/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70
CA 单点集群 满足一致性，可用性的系统，通常在可扩展性上不强大
CP - 满足一致性 ，分区一致性的系统，通常性能不是特别高
AP - 满足可用性，分区容错性的系统，通常可能对一致性的要求低一些
![enter description here][1]
### Equreka  && zookeeper
**eureka 是遵守AP原则的 zk是遵守CP规则**
1、zk保证CP原则
   当想注册中心查询服务列表时候，我们可以容忍注册中心返回的是几分钟前的注册信息，但不能接收服务down掉不可用，也就是说，服务注册功能对可用性的要求高于一致性。但是zk会出现当master节点因为网络故障与其他节点失去联系时，剩余节点会重新进行leader选举，期间比较耗时，同时服务处于不可用状态，瘫痪。在云部署环境下，因网络问题使得zk集群失去master节点是大概路发生的事情，虽然最终会恢复，但是在漫长的选举时间导致的注册长期不可用是不能容忍的。
2、保证AP
 Eureka 在设计时候优先保证可用性，每个节点平等，几个几点挂掉并不会影响正常工作的节点。Eureka的客户端向某个Eureka注册时如果链接失败，则会自动切换至其他节点，Eureka还有自我保护机制。如果一定时间内（15分钟）超过百分之85的节点没有正常的心跳，那么Eureka就认为客户端与注册中心出翔了网络故障则会进行以下情况：
 * Eureka 不再从注册列表移除长时间没收到心跳而应该过期的服务
 * Eureka 仍然能接受新服务的注册和查询请求，但是不会被同步到其他节点上（保证当前节点依然可用）
 * 当网络稳定时，当前实例新的注册信息会被同步到其他节点中
    


  [1]: ./images/1557059961117.jpg "1557059961117.jpg"